const canvas = document.getElementById('myCanvas');
const ctx = canvas.getContext('2d');

// Topun özellikleri
let ballX = canvas.width/2;
let ballY = canvas.height-30;
let ballRadius = 10;
let dx = 2;
let dy = -2;

// Paletin özellikleri
let paddleHeight = 10;
let paddleWidth = 75;
let paddleX = (canvas.width-paddleWidth)/2;

// Topu çizme fonksiyonu
function drawBall() {
  ctx.beginPath();
  ctx.arc(ballX, ballY, ballRadius, 0, Math.PI*2);
  ctx.fillStyle = "#0095DD";
  ctx.fill();
  ctx.closePath();
}

// Paleti çizme fonksiyonu
function drawPaddle() {
  ctx.beginPath();
  ctx.rect(paddleX, canvas.height-paddleHeight, paddleWidth, paddleHeight);
  ctx.fillStyle = "#0095DD";
  ctx.fill();
  ctx.closePath();
}

// Oyunun ana döngüsü
function draw() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  drawBall();
  drawPaddle();

  // Topun hareketini güncelle
  ballX += dx;
  ballY += dy;

  // Topun duvarlara çarpması
  if(ballX + dx > canvas.width-ballRadius || ballX + dx < ballRadius) {
    dx = -dx;
  }
  if(ballY + dy < ballRadius) {
    dy = -dy;
  } else if(ballY + dy > canvas.height-ballRadius) {
    if(ballX > paddleX && ballX < paddleX + paddleWidth) {
      dy = -dy;
    } else {
      alert("Oyun Bitti!");
      document.location.reload();
    }
  }

  // Fare hareketlerini takip et (paleti hareket ettirmek için)
  document.addEventListener("mousemove", mouseMoveHandler, false);

  function mouseMoveHandler(e) {
    var relativeX = e.clientX - canvas.offsetLeft;
    if(relativeX > 0 && relativeX < canvas.width) {
      paddleX = relativeX - paddleWidth/2;
    }
  }

  requestAnimationFrame(draw);
}

draw();
